"use strict";(self.webpackChunknumfu_docs=self.webpackChunknumfu_docs||[]).push([[852],{1676:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"html","value":"<h1 style=\'font-size: 250%\'><a href=\'/numfu\' style=\'text-decoration: none; color: var(--text-color)\'>NumFu</a> <span style=\'font-weight: 300\'>Docs</span></h1><hr>","className":"sidebar-title","defaultStyle":true},{"type":"link","label":"Getting Started","href":"/numfu/docs/","docId":"readme","unlisted":false},{"type":"category","label":"Guide","collapsed":false,"items":[{"type":"link","label":"Basic Syntax","href":"/numfu/docs/guide/basic-syntax","docId":"guide/basic-syntax","unlisted":false},{"type":"link","label":"Numbers and Arithmetic","href":"/numfu/docs/guide/arithmetic","docId":"guide/arithmetic","unlisted":false},{"type":"link","label":"Booleans and Logic","href":"/numfu/docs/guide/booleans","docId":"guide/booleans","unlisted":false},{"type":"link","label":"Variables and Let Expressions","href":"/numfu/docs/guide/variables","docId":"guide/variables","unlisted":false},{"type":"link","label":"Functions","href":"/numfu/docs/guide/functions","docId":"guide/functions","unlisted":false},{"type":"link","label":"Lists","href":"/numfu/docs/guide/lists","docId":"guide/lists","unlisted":false},{"type":"link","label":"Strings and Text","href":"/numfu/docs/guide/strings","docId":"guide/strings","unlisted":false},{"type":"link","label":"Special Operators","href":"/numfu/docs/guide/operators","docId":"guide/operators","unlisted":false},{"type":"link","label":"Partial Application","href":"/numfu/docs/guide/partial-application","docId":"guide/partial-application","unlisted":false},{"type":"link","label":"Printing and Assertions","href":"/numfu/docs/guide/printing","docId":"guide/printing","unlisted":false},{"type":"link","label":"Imports and Exports","href":"/numfu/docs/guide/modules","docId":"guide/modules","unlisted":false}],"collapsible":true},{"type":"category","label":"Reference","collapsed":false,"items":[{"type":"link","label":"Built-ins","href":"/numfu/docs/reference/builtins","docId":"reference/builtins","unlisted":false},{"type":"link","label":"The Standard Library","href":"/numfu/docs/reference/stdlib","docId":"reference/stdlib","unlisted":false},{"type":"link","label":"CLI","href":"/numfu/docs/reference/cli","docId":"reference/cli","unlisted":false}],"collapsible":true}]},"docs":{"guide/arithmetic":{"id":"guide/arithmetic","title":"Numbers and Arithmetic","description":"NumFu\'s foundation is built on powerful numeric computation with arbitrary precision arithmetic. Let\'s start with the basics of numbers and mathematical operations.","sidebar":"docsSidebar"},"guide/basic-syntax":{"id":"guide/basic-syntax","title":"Basic Syntax","description":"This is a quick overview on the structure of NumFu programs.","sidebar":"docsSidebar"},"guide/booleans":{"id":"guide/booleans","title":"Booleans and Logic","description":"NumFu\'s boolean system handles true/false values and logical operations with some unique features like chained comparisons and truthiness rules.","sidebar":"docsSidebar"},"guide/functions":{"id":"guide/functions","title":"Functions","description":"As a functional programming language, NumFu treats functions as first-class values that can be created, passed around, and composed to build complex programs from simple parts.","sidebar":"docsSidebar"},"guide/lists":{"id":"guide/lists","title":"Lists","description":"Lists are NumFu\'s primary data structure for working with collections of values. They\'re immutable, heterogeneous (can contain different types), and come with powerful operations for transformation and manipulation.","sidebar":"docsSidebar"},"guide/modules":{"id":"guide/modules","title":"Imports and Exports","description":"NumFu supports a robust module system that allows you to organize and reuse code across multiple files. This guide explains how to work with modules, import functionality from other files, and export values for use in other modules.","sidebar":"docsSidebar"},"guide/operators":{"id":"guide/operators","title":"Special Operators","description":"NumFu includes several expressive operators to make functional programming more intuitive:","sidebar":"docsSidebar"},"guide/partial-application":{"id":"guide/partial-application","title":"Partial Application","description":"Partial application in NumFu lets you call a function with some of its arguments now, producing a new function that remembers those arguments and waits for the rest.","sidebar":"docsSidebar"},"guide/printing":{"id":"guide/printing","title":"Printing and Assertions","description":"NumFu offers simple tools for debugging and verification. Use print, println, assert, or sugar syntax to check results and trace execution.","sidebar":"docsSidebar"},"guide/strings":{"id":"guide/strings","title":"Strings and Text","description":"NumFu treats text as first-class data with powerful string operations. Let\'s explore how to work with strings in NumFu.","sidebar":"docsSidebar"},"guide/variables":{"id":"guide/variables","title":"Variables and Let Expressions","description":"In NumFu, variables can be created in two ways:","sidebar":"docsSidebar"},"readme":{"id":"readme","title":"Getting Started with NumFu","description":"NumFu is a pure, interpreted, functional programming language designed for readable and expressive code, extensibility, and ease of learning for beginners.","sidebar":"docsSidebar"},"reference/builtins":{"id":"reference/builtins","title":"Built-ins","description":"NumFu comes with a set of built-in constants and operators that are always available in every program. Most operators are overloaded to work with different types.","sidebar":"docsSidebar"},"reference/cli":{"id":"reference/cli","title":"CLI","description":"NumFu provides a command-line interface for running programs, interactive development, and debugging. This reference covers all available commands and options.","sidebar":"docsSidebar"},"reference/stdlib":{"id":"reference/stdlib","title":"The Standard Library","description":"NumFu comes with a comprehensive set of built-in constants and functions covering mathematics, string manipulation, list operations, and more. They are grouped into different modules that can be imported using the import statement.","sidebar":"docsSidebar"}}}}')}}]);