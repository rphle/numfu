"use strict";(self.webpackChunknumfu_docs=self.webpackChunknumfu_docs||[]).push([[943],{1014:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"guide/arithmetic","title":"Numbers and Arithmetic","description":"NumFu\'s foundation is built on powerful numeric computation with arbitrary precision arithmetic. Let\'s start with the basics of numbers and mathematical operations.","source":"@site/../docs/guide/arithmetic.md","sourceDirName":"guide","slug":"/guide/arithmetic","permalink":"/numfu/docs/guide/arithmetic","draft":false,"unlisted":false,"editUrl":"https://github.com/rphle/numfu/tree/main/docs/../docs/guide/arithmetic.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Basic Syntax","permalink":"/numfu/docs/guide/basic-syntax"},"next":{"title":"Booleans and Logic","permalink":"/numfu/docs/guide/booleans"}}');var r=i(4848),t=i(8453);const s={},c="Numbers and Arithmetic",l={},o=[{value:"Number Literals",id:"number-literals",level:2},{value:"Basic Numbers",id:"basic-numbers",level:3},{value:"Scientific Notation",id:"scientific-notation",level:3},{value:"Arithmetic Operators",id:"arithmetic-operators",level:2},{value:"Basic Operations",id:"basic-operations",level:3},{value:"Unary Operators",id:"unary-operators",level:3},{value:"Operator Precedence",id:"operator-precedence",level:2},{value:"Mathematical Constants",id:"mathematical-constants",level:2},{value:"Infinity and NaN",id:"infinity-and-nan",level:2},{value:"Examples",id:"examples",level:2},{value:"Circle Area",id:"circle-area",level:3},{value:"Quadratic Formula Discriminant",id:"quadratic-formula-discriminant",level:3},{value:"Compound Interest",id:"compound-interest",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"numbers-and-arithmetic",children:"Numbers and Arithmetic"})}),"\n",(0,r.jsx)(n.p,{children:"NumFu's foundation is built on powerful numeric computation with arbitrary precision arithmetic. Let's start with the basics of numbers and mathematical operations."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"number-literals",children:"Number Literals"}),"\n",(0,r.jsx)(n.h3,{id:"basic-numbers",children:"Basic Numbers"}),"\n",(0,r.jsx)(n.p,{children:"NumFu supports several number formats:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"42;          // Integer\n3.14159      // Decimal\n.5           // Leading decimal point optional\n-17          // Negative numbers\n"})}),"\n",(0,r.jsx)(n.h3,{id:"scientific-notation",children:"Scientific Notation"}),"\n",(0,r.jsx)(n.p,{children:"For very large or small numbers:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"2.5e10       // 25,000,000,000\n1.23E-4      // 0.000123\n-1.5e6       // -1,500,000\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"arithmetic-operators",children:"Arithmetic Operators"}),"\n",(0,r.jsx)(n.h3,{id:"basic-operations",children:"Basic Operations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"10 + 5       // Addition: 15\n10 - 5       // Subtraction: 5\n10 * 5       // Multiplication: 50\n10 / 5       // Division: 2\n10 % 3       // Modulo: 1\n2 ^ 8        // Exponentiation: 256\n"})}),"\n",(0,r.jsx)(n.h3,{id:"unary-operators",children:"Unary Operators"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"-42          // Negation: -42\n+42          // Explicit positive: 42\n--42         // Double negative: 42\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"operator-precedence",children:"Operator Precedence"}),"\n",(0,r.jsx)(n.p,{children:"NumFu follows mathematical precedence rules:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"2 + 3 * 4;           // 14 (multiplication first)\n2 + 3 * 4^2;         // 50 (exponentiation first)\n(2 + 3) * 4;         // 20 (parentheses override)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can find more information ",(0,r.jsx)(n.a,{href:"#operator-precedence",children:"here"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"mathematical-constants",children:"Mathematical Constants"}),"\n",(0,r.jsx)(n.p,{children:"NumFu provides essential mathematical constants:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"pi;           // \u03c0 \u2248 3.14159...\ne;            // Euler's number \u2248 2.71828...\ninf;          // Infinity\nnan;          // Not a Number\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"infinity-and-nan",children:"Infinity and NaN"}),"\n",(0,r.jsxs)(n.p,{children:["NumFu implements full Inf/NaN (not a number) arithmetic according to the ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/IEEE_754",children:"IEEE 754 standard"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"1 / 0;        // +inf (positive infinity)\n-1 / 0;       // -inf (negative infinity)\n0 / 0;        // nan (not a number)\ninf * 0       // nan\nsqrt(-1)      // nan\nnan > 42      // false\nnan <= 42     // false\n// ...\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For a complete, easy-to-understand reference, see ",(0,r.jsx)(n.a,{href:"https://steve.hollasch.net/cgindex/coding/ieeefloat.html",children:"this article"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"circle-area",children:"Circle Area"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:'import pi from "math"\nlet radius = 5 in pi * radius^2  // 78.53...\n'})}),"\n",(0,r.jsx)(n.h3,{id:"quadratic-formula-discriminant",children:"Quadratic Formula Discriminant"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"let a = 1, b = 5, c = 6 in b^2 - 4*a*c  // 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"compound-interest",children:"Compound Interest"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-numfu",children:"let principal = 1000, rate = 0.05, years = 10 in\n  principal * (1 + rate)^years  // 1628.89...\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var a=i(6540);const r={},t=a.createContext(r);function s(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);