"use strict";(self.webpackChunknumfu_docs=self.webpackChunknumfu_docs||[]).push([[704],{8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var i=r(6540);const s={},o=i.createContext(s);function t(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(o.Provider,{value:n},e.children)}},9540:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"guide/modules","title":"Imports and Exports","description":"NumFu supports a robust module system that allows you to organize and reuse code across multiple files. This guide explains how to work with modules, import functionality from other files, and export values for use in other modules.","source":"@site/../docs/guide/modules.md","sourceDirName":"guide","slug":"/guide/modules","permalink":"/numfu/docs/guide/modules","draft":false,"unlisted":false,"editUrl":"https://github.com/rphle/numfu/tree/main/docs/../docs/guide/modules.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Printing and Assertions","permalink":"/numfu/docs/guide/printing"},"next":{"title":"Built-ins","permalink":"/numfu/docs/reference/builtins"}}');var s=r(4848),o=r(8453);const t={},l="Imports and Exports",d={},a=[{value:"Basic Module Structure",id:"basic-module-structure",level:2},{value:"Exports",id:"exports",level:2},{value:"Export with Assignment",id:"export-with-assignment",level:3},{value:"Imports",id:"imports",level:2},{value:"Named Imports",id:"named-imports",level:3},{value:"Wildcard Imports",id:"wildcard-imports",level:3},{value:"Module-Prefixed Imports",id:"module-prefixed-imports",level:3},{value:"Import Organization",id:"import-organization",level:3},{value:"Module Resolution",id:"module-resolution",level:2},{value:"File-based Modules",id:"file-based-modules",level:3},{value:"Directory Modules",id:"directory-modules",level:3},{value:"Relative Imports",id:"relative-imports",level:3}];function u(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"imports-and-exports",children:"Imports and Exports"})}),"\n",(0,s.jsx)(n.p,{children:"NumFu supports a robust module system that allows you to organize and reuse code across multiple files. This guide explains how to work with modules, import functionality from other files, and export values for use in other modules."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"basic-module-structure",children:"Basic Module Structure"}),"\n",(0,s.jsxs)(n.p,{children:["A module in NumFu is simply a file with the ",(0,s.jsx)(n.code,{children:".nfu"})," extension that can contain any valid NumFu code. Modules can define variables, functions, and other values, and can choose which of these to make available to other modules."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:"// math_utils.nfu\nlet PI = 3.14159\nlet square = x -> x * x\nlet cube = x -> x * x * x\n\nexport PI, square, cube\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"exports",children:"Exports"}),"\n",(0,s.jsxs)(n.p,{children:["To make values available to other modules, use the ",(0,s.jsx)(n.code,{children:"export"})," keyword followed by a comma-separated list of identifiers:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'let greeting = "Hello, World!"\nexport greeting\n\nlet VERSION = "1.0.0"\nlet add = {a, b -> a + b}\nlet sub = {a, b -> a - b}\n\nexport VERSION, add, sub\n'})}),"\n",(0,s.jsx)(n.p,{children:"You can use multiple export statements in a single file."}),"\n",(0,s.jsx)(n.h3,{id:"export-with-assignment",children:"Export with Assignment"}),"\n",(0,s.jsx)(n.p,{children:"You can also directly export a value at the same time you define it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:"export my_export = 5 + 2\nexport double = x -> x * 2\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"imports",children:"Imports"}),"\n",(0,s.jsx)(n.h3,{id:"named-imports",children:"Named Imports"}),"\n",(0,s.jsx)(n.p,{children:"The most common way to import specific values from a module is using named imports:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'import pi, sqrt from "math"\n\nsqrt(pi)  // Uses both imported values\n'})}),"\n",(0,s.jsx)(n.h3,{id:"wildcard-imports",children:"Wildcard Imports"}),"\n",(0,s.jsxs)(n.p,{children:["To import all exported values from a module, use the ",(0,s.jsx)(n.code,{children:"*"})," syntax:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'import * from "math"\n\n// All exported values are now available\npi\nsqrt(9)\nsin(0)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"module-prefixed-imports",children:"Module-Prefixed Imports"}),"\n",(0,s.jsx)(n.p,{children:"When importing without specifying names, the module's exports are prefixed with the module name:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'import "math"\n\nmath.pi\nmath.sqrt(4)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"import-organization",children:"Import Organization"}),"\n",(0,s.jsxs)(n.p,{children:["All imports ",(0,s.jsx)(n.em,{children:"must"})," be placed at the top of your file, before any other code. This is a strict requirement enforced by the NumFu parser:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'// Correct:\nimport pi, e from "math"\nimport * from "random"\nimport format from "std"\n\nformat("pi = {}", pi)  // Code after imports\n\n// Incorrect - will raise a syntax error:\nlet x = 42\nimport count from "std"  // SyntaxError: Imports allowed only at top level\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"module-resolution",children:"Module Resolution"}),"\n",(0,s.jsx)(n.p,{children:"NumFu follows a specific order when resolving module imports:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local Files"}),": First checks for a ",(0,s.jsx)(n.code,{children:".nfu"})," file in the same directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Folders"}),": Looks for directories with an ",(0,s.jsx)(n.code,{children:"index.nfu"})," file"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Standard Library"}),": Checks the built-in standard library"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"file-based-modules",children:"File-based Modules"}),"\n",(0,s.jsx)(n.p,{children:"For a simple file-based module:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'// Imports from mymodule.nfu in the same directory\nimport value from "mymodule"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"directory-modules",children:"Directory Modules"}),"\n",(0,s.jsxs)(n.p,{children:["A directory can be treated as a module if it contains an ",(0,s.jsx)(n.code,{children:"index.nfu"})," file. This is useful for organizing related functionality into a single namespace:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'// Directory structure:\n// utils/\n//   \u251c\u2500\u2500 index.nfu     // Exports everything\n//   \u251c\u2500\u2500 math.nfu      // Math utilities\n//   \u2514\u2500\u2500 string.nfu    // String utilities\n\n// In utils/index.nfu:\nimport * from "math"     // Re-export from math.nfu\nimport * from "string"   // Re-export from string.nfu\n\n// In your main file:\nimport add, multiply from "utils"  // Imports from utils/index.nfu\n'})}),"\n",(0,s.jsx)(n.p,{children:"Directory modules enable you to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Group related functionality"}),"\n",(0,s.jsx)(n.li,{children:"Create hierarchical module structures"}),"\n",(0,s.jsx)(n.li,{children:"Provide a single entry point for multiple sub-modules"}),"\n",(0,s.jsx)(n.li,{children:"Control what gets exposed through the index file"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"relative-imports",children:"Relative Imports"}),"\n",(0,s.jsx)(n.p,{children:"Modules can import from relative paths:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-numfu",children:'// From a file in parent directory\nimport value from "../shared"\n\n// From a subdirectory\nimport util from "./utils/helpers"\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);