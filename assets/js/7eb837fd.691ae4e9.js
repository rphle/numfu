"use strict";(self.webpackChunknumfu_docs=self.webpackChunknumfu_docs||[]).push([[405],{815:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"guide/printing","title":"Printing and Assertions","description":"NumFu offers simple tools for debugging and verification. Use print, println, assert, or sugar syntax to check results and trace execution.","source":"@site/../docs/guide/printing.md","sourceDirName":"guide","slug":"/guide/printing","permalink":"/numfu/docs/guide/printing","draft":false,"unlisted":false,"editUrl":"https://github.com/rphle/numfu/tree/main/docs/../docs/guide/printing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Partial Application","permalink":"/numfu/docs/guide/partial-application"},"next":{"title":"Imports and Exports","permalink":"/numfu/docs/guide/modules"}}');var i=r(4848),t=r(8453);const o={},l="Printing and Assertions",a={},d=[{value:"Printing Output",id:"printing-output",level:2},{value:"Reading Input",id:"reading-input",level:2},{value:"Assertions",id:"assertions",level:2},{value:"Basic Form",id:"basic-form",level:3},{value:"Syntactic Sugar",id:"syntactic-sugar",level:3},{value:"Errors",id:"errors",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"printing-and-assertions",children:"Printing and Assertions"})}),"\n",(0,i.jsxs)(n.p,{children:["NumFu offers simple tools for debugging and verification. Use ",(0,i.jsx)(n.code,{children:"print"}),", ",(0,i.jsx)(n.code,{children:"println"}),", ",(0,i.jsx)(n.code,{children:"assert"}),", or sugar syntax to check results and trace execution."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"printing-output",children:"Printing Output"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"print"})," and ",(0,i.jsx)(n.code,{children:"println"})," from the ",(0,i.jsx)(n.code,{children:"io"})," module to display values.\nAll values are automatically converted to strings before printing."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-numfu",children:'import print, println from "io"\n\nprint("I like cheese")\nprint(" and tomatoes.\\n")\n\nprintln("They are indeed very delicious.")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"I like cheese and tomatoes.\nThey are indeed very delicious.\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"println(x)"})," is simply shorthand for:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-numfu",children:'print(x + "\\n")\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"reading-input",children:"Reading Input"}),"\n",(0,i.jsxs)(n.p,{children:["The built-in function ",(0,i.jsx)(n.code,{children:"input"})," lets you read text entered by the user.\nYou can optionally pass a prompt string that will be displayed before the user types."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-numfu",children:'import input, println from "io"\n\nlet name = input("What is your name? ")\nprintln("Hello, " + name + "!")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"What is your name? John\nHello, John!\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"assertions",children:"Assertions"}),"\n",(0,i.jsx)(n.p,{children:"Use assertions to validate that values match expectations. They throw an error if the condition fails."}),"\n",(0,i.jsx)(n.h3,{id:"basic-form",children:"Basic Form"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-numfu",children:'// Assert boolean condition\nassert(2 + 2 == 4)\n\n// Optional return value for use in expressions\nlet greet = {name -> "Hello " + assert(length(name) == 5, name)}\n\ngreet("James")\ngreet("Mary")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"true\nHello James\n...\nAssertionError\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"syntactic-sugar",children:"Syntactic Sugar"}),"\n",(0,i.jsxs)(n.p,{children:["Top-level expressions can use the ",(0,i.jsx)(n.code,{children:"---\x3e"})," operator for readable assertions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-numfu",children:'2 + 2 ---\x3e $ == 4             // same as assert(2 + 2 == 4)\nlength("hello") ---\x3e $ == 5\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$"})," refers to the expression on the left"]}),"\n",(0,i.jsxs)(n.li,{children:["This form is ",(0,i.jsx)(n.strong,{children:"only valid at top-level"}),", not inside functions"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"errors",children:"Errors"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"error(message)"})," to stop execution with a custom message."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-numfu",children:'let divide = {a, b ->\n  if b != 0 then a / b\n  else error("Cannot divide by zero!")\n} in\n  divide(42, 0)\n\n// RuntimeError: Cannot divide by zero!\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can also specify a custom error name:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-numfu",children:'error("Cannot divide by zero!", "MathError")\n\n// MathError: Cannot divide by zero!\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);