"use strict";(self.webpackChunknumfu_docs=self.webpackChunknumfu_docs||[]).push([[634],{1459:(n,e,s)=>{s.r(e),s.d(e,{default:()=>g});var i=s(4164),t=s(8774),a=s(4586),l=s(1656),r=s(1107),c=s(1028);const o={};var u=s(4848);function d(){const{siteConfig:n}=(0,a.A)();return(0,u.jsx)("header",{className:(0,i.A)("hero",o.heroMinimal),children:(0,u.jsxs)("div",{className:"container text--center",children:[(0,u.jsxs)(r.A,{as:"h1",className:"hero__title",children:[(0,u.jsx)("img",{src:"/numfu/img/logo.png",id:"logo"}),(0,u.jsx)("strong",{children:"NumFu"})]}),(0,u.jsxs)("p",{className:"hero__subtitle",children:["A pure functional programming language",(0,u.jsx)("br",{}),"designed for readability, extensibility and math."]}),(0,u.jsxs)("div",{className:"buttons",children:[(0,u.jsx)(t.A,{className:"button button--primary button--lg",to:"/docs/",children:"Get started \u2192"}),(0,u.jsx)(t.A,{className:"button button--outline button--lg margin-left--sm",to:"https://github.com/rphle/numfu",children:"GitHub"}),(0,u.jsx)(t.A,{className:"button button--outline button--lg margin-left--sm",to:"https://pypi.org/project/numfu-lang/",children:"PyPI"})]})]})})}function m(){return(0,u.jsx)("section",{className:"margin-bottom--xl",children:(0,u.jsxs)("div",{className:"container",children:[(0,u.jsx)(r.A,{as:"h2",className:"text--center margin-bottom--md",children:"Quickstart"}),(0,u.jsxs)("div",{className:"row equal-height",children:[(0,u.jsx)("div",{className:"col col--6",children:(0,u.jsx)(c.A,{className:"margin-bottom--none",language:"numfu",title:"Code Example",children:'import sqrt from "math"\n\n// Approximate the golden ratio\nlet golden = {depth ->\n  let recur =\n    {d -> if d <= 0 then 1 else 1 + 1 / recur(d - 1)}\n  in recur(depth)\n} in golden(10) // \u2248 1.618\n\n// Composition and pipes\nlet add1 = {x -> x + 1},\n    double = {x -> x * 2}\nin 5 |> (add1 >> double) // 12\n\n// Partial Application\n{a, b, c -> a+b+c}(_, 5, _)\n// {a,c -> a+5+c}\n\n// Assertions\nsqrt(49) ---\x3e $ == 7'})}),(0,u.jsxs)("div",{className:"col col--6",children:[(0,u.jsx)(c.A,{language:"bash",title:"Install from PyPI",children:"pip install numfu-lang"}),(0,u.jsx)(c.A,{language:"bash",title:"Start an interactive REPL",children:"numfu repl"}),(0,u.jsx)(c.A,{language:"bash",title:"Run a file",children:"numfu example.nfu"}),(0,u.jsx)(t.A,{className:"button button--outline button--lg",to:"/docs/",children:"Read the Language Guide"})]})]})]})})}function h(){return(0,u.jsx)("section",{className:"margin-bottom--xl",children:(0,u.jsxs)("div",{className:"container",children:[(0,u.jsx)(r.A,{as:"h2",className:"text--center margin-bottom--lg",children:"What Makes NumFu Special?"}),(0,u.jsxs)("div",{className:"row",children:[(0,u.jsx)("div",{className:"col col--6 margin-top--3",children:(0,u.jsxs)("ul",{className:"feature-list",children:[(0,u.jsxs)("li",{children:[(0,u.jsx)("strong",{children:"Functions First:"})," Everything is a function. You can curry, compose, and pass functions freely; partial application is natively supported."]}),(0,u.jsxs)("li",{children:[(0,u.jsx)("strong",{children:"Tail Call Optimization:"})," NumFu automatically optimizes tail-recursive calls so you don't run into stack overflow issues."]}),(0,u.jsxs)("li",{children:[(0,u.jsx)("strong",{children:"Clean Syntax:"})," Intuitive syntax inspired by math, designed to be readable even for those who don\u2019t use functional languages daily."]}),(0,u.jsxs)("li",{children:[(0,u.jsx)("strong",{children:"Customizable Precision:"})," Numbers use arbitrary precision by default, powered by native GNU MPFR bindings."]}),(0,u.jsxs)("li",{children:[(0,u.jsx)("strong",{children:"Designed for Learning & Extensibility:"})," NumFu is minimal by design, making it easy to explore, understand, and modify. It is 100% written in Python."]})]})}),(0,u.jsx)("div",{className:"col col--6",children:(0,u.jsx)(c.A,{language:"numfu",title:"A quick demo",children:"{x, y, z -> x + y + z}(_, 2);\n// {x, z -> x+2+z}\n\n[5, 12, 3] |> filter(_, _ > 4) |> map(_, _ * 2)\n// [10, 24]\n\n// Efficient tail-recursive sum\nlet sum_to = {n, acc ->\n  if n <= 0 then acc\n  else sum_to(n - 1, acc + n)\n} in\n  sum_to(100000, 0) // 5000050000\n\nlet distance = {x1, y1, x2, y2 ->\n    let dx = x2 - x1, dy = y2 - y1 in\n      sqrt(dx^2 + dy^2)\n} in\n  distance(0, 0, 3, 4) // 5\n\n0.1 + 0.2 == 0.3\n// true"})})]})]})})}function x(){return(0,u.jsxs)("p",{children:["\xa9 2025 Raphael Engel | All rights reserved.",(0,u.jsx)("br",{}),"This project is licensed under the \xa0",(0,u.jsx)("a",{href:"https://raw.githubusercontent.com/rphle/numfu/refs/heads/main/LICENSE",children:"Apache 2.0 license"}),"."]})}function g(){const{siteConfig:n}=(0,a.A)();return(0,u.jsxs)(l.A,{title:`${n.title} Programming Language`,description:"NumFu is a minimalist functional programming language designed for readability, extensibility and math.",children:[(0,u.jsx)(d,{}),(0,u.jsxs)("main",{children:[(0,u.jsx)(m,{}),(0,u.jsx)(h,{})]}),(0,u.jsx)("footer",{children:(0,u.jsx)(x,{})})]})}}}]);